// ch05 클로저
// 클로저 -> 프로그래밍 언어에서 등장하는 보편적 특성, 이를 설명하는 다양한 문장이 있다.

// 자신을 내포하는 함수의 컨텍스트에 접근할 수 있는 함수.
// 함수가 특정 스코프에 접근할 수 있도록 의도적으로 그 스코프에서 정의하는 것.
// 함수를 선언할 때 만들어지는 유효범위가 사라진 후에도 호출할 수 있는 함수.
// 이미 생명 주기상 끝난 외부 함수의 변수를 참조하는 함수.
// 자유변수가 있는 함수와 자유변수를 알 수 있는 환경의 결합.
// 로컬 변수를 참조하고 있는 함수 내의 함수.
// 자신이 생성될 때의 스코프에서 알 수 있었던 변수들 중,
// 언젠가 자신이 실행될 때 사용할 변수들만을 기억하여 유지시키는 함수.

// 어떤 함수에서 선언한 변수를 참조하는 내부함수에서만 발생하는 현상.

// 외부 함수의 변수를 참조하는 내부 함수(1)
let outer = function (){
    let a = 1;
    let inner = function (){
        console.log(++a);
    };
    inner();
};
outer();

// 외부 함수의 변수를 참조하는 내부 함수(2)
